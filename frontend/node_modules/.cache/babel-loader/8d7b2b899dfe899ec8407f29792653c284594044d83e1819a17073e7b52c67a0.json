{"ast":null,"code":"const API_URL = 'http://127.0.0.1:8000/tasks/';\n\n// Fetch tasks with optional filters\nexport const fetchTasks = async (priority = '', completed = '', dueDate = '') => {\n  try {\n    const url = new URL(API_URL);\n    if (priority) url.searchParams.append('priority', priority);\n    if (completed) url.searchParams.append('completed', completed);\n    if (dueDate) url.searchParams.append('dueDate', dueDate);\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching tasks:\", error);\n    throw error;\n  }\n};\n\n// Create a new task via POST request\nexport const createTask = async task => {\n  try {\n    const response = await fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const newTask = await response.json();\n    return newTask;\n  } catch (error) {\n    console.error(\"Error creating task:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_URL","fetchTasks","priority","completed","dueDate","url","URL","searchParams","append","response","fetch","ok","Error","status","data","json","error","console","createTask","task","method","headers","body","JSON","stringify","newTask"],"sources":["E:/Task_Manager_APP/frontend/src/services/api.js"],"sourcesContent":["const API_URL = 'http://127.0.0.1:8000/tasks/';\r\n\r\n// Fetch tasks with optional filters\r\nexport const fetchTasks = async (priority = '', completed = '', dueDate = '') => {\r\n    try {\r\n        const url = new URL(API_URL);\r\n\r\n        if (priority) url.searchParams.append('priority', priority);\r\n        if (completed) url.searchParams.append('completed', completed);\r\n        if (dueDate) url.searchParams.append('dueDate', dueDate);\r\n\r\n        const response = await fetch(url);\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching tasks:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Create a new task via POST request\r\nexport const createTask = async (task) => {\r\n    try {\r\n        const response = await fetch(API_URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(task),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        const newTask = await response.json();\r\n        return newTask;\r\n    } catch (error) {\r\n        console.error(\"Error creating task:\", error);\r\n        throw error;\r\n    }\r\n};\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,8BAA8B;;AAE9C;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,QAAQ,GAAG,EAAE,EAAEC,SAAS,GAAG,EAAE,EAAEC,OAAO,GAAG,EAAE,KAAK;EAC7E,IAAI;IACA,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACN,OAAO,CAAC;IAE5B,IAAIE,QAAQ,EAAEG,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,UAAU,EAAEN,QAAQ,CAAC;IAC3D,IAAIC,SAAS,EAAEE,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,WAAW,EAAEL,SAAS,CAAC;IAC9D,IAAIC,OAAO,EAAEC,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,SAAS,EAAEJ,OAAO,CAAC;IAExD,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,CAAC;IAEjC,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;IAC7D;IAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAG,MAAOC,IAAI,IAAK;EACtC,IAAI;IACA,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAACV,OAAO,EAAE;MAClCoB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC7B,CAAC,CAAC;IAEF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;IAC7D;IAEA,MAAMY,OAAO,GAAG,MAAMhB,QAAQ,CAACM,IAAI,CAAC,CAAC;IACrC,OAAOU,OAAO;EAClB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}