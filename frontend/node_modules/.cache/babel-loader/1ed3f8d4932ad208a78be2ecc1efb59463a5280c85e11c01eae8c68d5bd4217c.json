{"ast":null,"code":"var _jsxFileName = \"E:\\\\Task_Manager_APP\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskItem from './TaskItem'; // Correct import for TaskItem component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]); // State for storing tasks\n  const [loading, setLoading] = useState(true); // State for loading status\n\n  useEffect(() => {\n    // Fetch tasks from the Django backend API\n    fetch(\"http://localhost:8000/tasks/\") // Update this URL if needed\n    .then(response => response.json()).then(data => {\n      setTasks(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching tasks:\", error);\n      setLoading(false);\n    });\n  }, []); // Empty array means this effect runs once when the component mounts\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this); // Show loading message while data is being fetched\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n      task: task\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) // Render TaskItem for each task\n    )\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"suOgpW3t2nMZzUgwyaGqSRlDRtE=\");\n_c = TaskList;\nexport default TaskList; // Ensure TaskList is exported\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","TaskItem","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","loading","setLoading","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","id","_c","$RefreshReg$"],"sources":["E:/Task_Manager_APP/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TaskItem from './TaskItem';  // Correct import for TaskItem component\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);  // State for storing tasks\r\n  const [loading, setLoading] = useState(true);  // State for loading status\r\n\r\n  useEffect(() => {\r\n    // Fetch tasks from the Django backend API\r\n    fetch(\"http://localhost:8000/tasks/\")  // Update this URL if needed\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setTasks(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching tasks:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, []);  // Empty array means this effect runs once when the component mounts\r\n\r\n  if (loading) {\r\n    return <p>Loading tasks...</p>;  // Show loading message while data is being fetched\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {tasks.map(task => (\r\n        <TaskItem key={task.id} task={task} />  // Render TaskItem for each task\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;  // Ensure TaskList is exported\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EACzC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE/CC,SAAS,CAAC,MAAM;IACd;IACAU,KAAK,CAAC,8BAA8B,CAAC,CAAE;IAAA,CACpCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZP,QAAQ,CAACO,IAAI,CAAC;MACdL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CP,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,IAAID,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAe,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAE;EACnC;EAEA,oBACEnB,OAAA;IAAAe,QAAA,EACGZ,KAAK,CAACiB,GAAG,CAACC,IAAI,iBACbrB,OAAA,CAACF,QAAQ;MAAeuB,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,CAAE;IACzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CA7BID,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA+Bd,eAAeA,QAAQ,CAAC,CAAE;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}