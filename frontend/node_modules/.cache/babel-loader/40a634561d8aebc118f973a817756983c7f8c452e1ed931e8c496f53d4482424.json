{"ast":null,"code":"var _jsxFileName = \"E:\\\\Task_Manager_APP\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [tasks, setTasks] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    if (token) {\n      // Decode the token to check if it's expired\n      const decoded = jwt_decode(token);\n      const expirationTime = decoded.exp * 1000;\n      if (Date.now() > expirationTime) {\n        // Token expired, handle refresh or logout\n        refreshToken();\n      } else {\n        setIsAuthenticated(true);\n      }\n    }\n  }, [token]);\n  const handleLogin = () => {\n    axios.post('http://localhost:8000/api/token/', {\n      username: 'ajith',\n      // replace with actual username\n      password: 'Ajith@123' // replace with actual password\n    }).then(response => {\n      const {\n        access,\n        refresh\n      } = response.data;\n      localStorage.setItem('token', access);\n      localStorage.setItem('refresh_token', refresh);\n      setToken(access);\n      setIsAuthenticated(true);\n    }).catch(error => {\n      console.error('Login failed!', error);\n    });\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refresh_token');\n    setToken('');\n    setIsAuthenticated(false);\n  };\n  const refreshToken = () => {\n    const refresh_token = localStorage.getItem('refresh_token');\n    if (refresh_token) {\n      axios.post('http://localhost:8000/api/token/refresh/', {\n        refresh: refresh_token\n      }).then(response => {\n        const {\n          access\n        } = response.data;\n        localStorage.setItem('token', access);\n        setToken(access);\n        setIsAuthenticated(true);\n      }).catch(error => {\n        console.error('Failed to refresh token:', error);\n        handleLogout();\n      });\n    }\n  };\n  const getTasks = () => {\n    if (token) {\n      axios.get('http://localhost:8000/api/tasks/', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        setTasks(response.data.tasks);\n      }).catch(error => {\n        console.error('Error fetching tasks:', error);\n        if (error.response && error.response.status === 401) {\n          // Token expired, try refreshing\n          refreshToken();\n        }\n      });\n    }\n  };\n  useEffect(() => {\n    if (isAuthenticated) {\n      getTasks();\n    }\n  }, [isAuthenticated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: task.name\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Obcels4/ptgb7FO31cS1c8qPULQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jwtDecode","jsxDEV","_jsxDEV","App","_s","token","setToken","localStorage","getItem","tasks","setTasks","isAuthenticated","setIsAuthenticated","decoded","jwt_decode","expirationTime","exp","Date","now","refreshToken","handleLogin","post","username","password","then","response","access","refresh","data","setItem","catch","error","console","handleLogout","removeItem","refresh_token","getTasks","get","headers","Authorization","status","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","task","name","id","_c","$RefreshReg$"],"sources":["E:/Task_Manager_APP/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\n\n\nconst App = () => {\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [tasks, setTasks] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    if (token) {\n      // Decode the token to check if it's expired\n      const decoded = jwt_decode(token);\n      const expirationTime = decoded.exp * 1000;\n      if (Date.now() > expirationTime) {\n        // Token expired, handle refresh or logout\n        refreshToken();\n      } else {\n        setIsAuthenticated(true);\n      }\n    }\n  }, [token]);\n\n  const handleLogin = () => {\n    axios.post('http://localhost:8000/api/token/', {\n      username: 'ajith', // replace with actual username\n      password: 'Ajith@123', // replace with actual password\n    })\n    .then(response => {\n      const { access, refresh } = response.data;\n      localStorage.setItem('token', access);\n      localStorage.setItem('refresh_token', refresh);\n      setToken(access);\n      setIsAuthenticated(true);\n    })\n    .catch(error => {\n      console.error('Login failed!', error);\n    });\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refresh_token');\n    setToken('');\n    setIsAuthenticated(false);\n  };\n\n  const refreshToken = () => {\n    const refresh_token = localStorage.getItem('refresh_token');\n    if (refresh_token) {\n      axios.post('http://localhost:8000/api/token/refresh/', { refresh: refresh_token })\n        .then(response => {\n          const { access } = response.data;\n          localStorage.setItem('token', access);\n          setToken(access);\n          setIsAuthenticated(true);\n        })\n        .catch(error => {\n          console.error('Failed to refresh token:', error);\n          handleLogout();\n        });\n    }\n  };\n\n  const getTasks = () => {\n    if (token) {\n      axios.get('http://localhost:8000/api/tasks/', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then(response => {\n        setTasks(response.data.tasks);\n      })\n      .catch(error => {\n        console.error('Error fetching tasks:', error);\n        if (error.response && error.response.status === 401) {\n          // Token expired, try refreshing\n          refreshToken();\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      getTasks();\n    }\n  }, [isAuthenticated]);\n\n  return (\n    <div>\n      {!isAuthenticated ? (\n        <div>\n          <h2>Login</h2>\n          <button onClick={handleLogin}>Login</button>\n        </div>\n      ) : (\n        <div>\n          <h2>Tasks</h2>\n          <button onClick={handleLogout}>Logout</button>\n          <ul>\n            {tasks.map(task => (\n              <li key={task.id}>{task.name}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}