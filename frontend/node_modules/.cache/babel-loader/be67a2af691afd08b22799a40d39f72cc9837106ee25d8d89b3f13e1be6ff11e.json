{"ast":null,"code":"var _jsxFileName = \"E:\\\\Task_Manager_APP\\\\frontend\\\\src\\\\components\\\\TaskItem.js\";\nimport React from 'react';\nimport { deleteTask, updateTask } from '../s';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskItem({\n  task,\n  refreshTasks\n}) {\n  const handleDelete = async () => {\n    try {\n      await deleteTask(task.id);\n      refreshTasks();\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded shadow-md mb-2 flex justify-between items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold\",\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600\",\n        children: [task.startDate, \" - \", task.endDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      className: \"text-red-500 hover:text-red-700\",\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","deleteTask","updateTask","jsxDEV","_jsxDEV","TaskItem","task","refreshTasks","handleDelete","id","error","console","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","startDate","endDate","onClick","_c","$RefreshReg$"],"sources":["E:/Task_Manager_APP/frontend/src/components/TaskItem.js"],"sourcesContent":["import React from 'react';\r\nimport { deleteTask, updateTask } from '../s';\r\n\r\nfunction TaskItem({ task, refreshTasks }) {\r\n  const handleDelete = async () => {\r\n    try {\r\n      await deleteTask(task.id);\r\n      refreshTasks();\r\n    } catch (error) {\r\n      console.error(\"Error deleting task:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-4 rounded shadow-md mb-2 flex justify-between items-center\">\r\n      <div>\r\n        <h3 className=\"text-lg font-semibold\">{task.title}</h3>\r\n        <p className=\"text-sm text-gray-600\">\r\n          {task.startDate} - {task.endDate}\r\n        </p>\r\n      </div>\r\n      <button onClick={handleDelete} className=\"text-red-500 hover:text-red-700\">\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskItem;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,UAAU,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC;AAAa,CAAC,EAAE;EACxC,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMP,UAAU,CAACK,IAAI,CAACG,EAAE,CAAC;MACzBF,YAAY,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEN,OAAA;IAAKQ,SAAS,EAAC,uEAAuE;IAAAC,QAAA,gBACpFT,OAAA;MAAAS,QAAA,gBACET,OAAA;QAAIQ,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAEP,IAAI,CAACQ;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvDd,OAAA;QAAGQ,SAAS,EAAC,uBAAuB;QAAAC,QAAA,GACjCP,IAAI,CAACa,SAAS,EAAC,KAAG,EAACb,IAAI,CAACc,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNd,OAAA;MAAQiB,OAAO,EAAEb,YAAa;MAACI,SAAS,EAAC,iCAAiC;MAAAC,QAAA,EAAC;IAE3E;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACI,EAAA,GAvBQjB,QAAQ;AAyBjB,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}