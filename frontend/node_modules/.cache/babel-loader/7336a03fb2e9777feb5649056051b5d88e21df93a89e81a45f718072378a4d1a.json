{"ast":null,"code":"var _jsxFileName = \"E:\\\\Task_Manager_APP\\\\frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createTask } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskForm({\n  refreshTasks\n}) {\n  _s();\n  const [taskData, setTaskData] = useState({\n    title: '',\n    description: '',\n    startDate: '',\n    endDate: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTaskData({\n      ...taskData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate the custom date format (DD/MM/YYYY)\n    const validateDateFormat = dateStr => {\n      const regex = /^(0[1-9]|[12][0-9]|3[01])\\/(0[1-9]|1[0-2])\\/\\d{4}$/;\n      return regex.test(dateStr);\n    };\n    if (!validateDateFormat(taskData.startDate) || !validateDateFormat(taskData.endDate)) {\n      alert(\"Please enter the date in the format DD/MM/YYYY.\");\n      return;\n    }\n\n    // Convert the dates to YYYY-MM-DD format\n    const convertToDate = dateStr => {\n      const [day, month, year] = dateStr.split('/');\n      return `${year}-${month}-${day}`;\n    };\n    const taskDataFormatted = {\n      ...taskData,\n      startDate: convertToDate(taskData.startDate),\n      endDate: convertToDate(taskData.endDate)\n    };\n    try {\n      await createTask(taskDataFormatted);\n      setTaskData({\n        title: '',\n        description: '',\n        startDate: '',\n        endDate: ''\n      });\n      refreshTasks();\n    } catch (error) {\n      console.error(\"Error creating task:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"bg-white p-4 rounded shadow-md mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Task Title\",\n      value: taskData.title,\n      onChange: handleChange,\n      className: \"w-full mb-2 p-2 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"description\",\n      placeholder: \"Task Description\",\n      value: taskData.description,\n      onChange: handleChange,\n      className: \"w-full mb-2 p-2 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"startDate\",\n      placeholder: \"Start Date (DD/MM/YYYY)\",\n      value: taskData.startDate,\n      onChange: handleChange,\n      className: \"w-full mb-2 p-2 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"endDate\",\n      placeholder: \"End Date (DD/MM/YYYY)\",\n      value: taskData.endDate,\n      onChange: handleChange,\n      className: \"w-full mb-2 p-2 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"8VZiYah5tmjeoPJKSJ5ivkb0qeY=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","createTask","jsxDEV","_jsxDEV","TaskForm","refreshTasks","_s","taskData","setTaskData","title","description","startDate","endDate","handleChange","e","name","value","target","handleSubmit","preventDefault","validateDateFormat","dateStr","regex","test","alert","convertToDate","day","month","year","split","taskDataFormatted","error","console","onSubmit","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Task_Manager_APP/frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createTask } from '../services/api';\r\n\r\nfunction TaskForm({ refreshTasks }) {\r\n  const [taskData, setTaskData] = useState({\r\n    title: '',\r\n    description: '',\r\n    startDate: '',\r\n    endDate: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setTaskData({ ...taskData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validate the custom date format (DD/MM/YYYY)\r\n    const validateDateFormat = (dateStr) => {\r\n      const regex = /^(0[1-9]|[12][0-9]|3[01])\\/(0[1-9]|1[0-2])\\/\\d{4}$/;\r\n      return regex.test(dateStr);\r\n    };\r\n\r\n    if (!validateDateFormat(taskData.startDate) || !validateDateFormat(taskData.endDate)) {\r\n      alert(\"Please enter the date in the format DD/MM/YYYY.\");\r\n      return;\r\n    }\r\n\r\n    // Convert the dates to YYYY-MM-DD format\r\n    const convertToDate = (dateStr) => {\r\n      const [day, month, year] = dateStr.split('/');\r\n      return `${year}-${month}-${day}`;\r\n    };\r\n\r\n    const taskDataFormatted = {\r\n      ...taskData,\r\n      startDate: convertToDate(taskData.startDate),\r\n      endDate: convertToDate(taskData.endDate),\r\n    };\r\n\r\n    try {\r\n      await createTask(taskDataFormatted);\r\n      setTaskData({ title: '', description: '', startDate: '', endDate: '' });\r\n      refreshTasks();\r\n    } catch (error) {\r\n      console.error(\"Error creating task:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"bg-white p-4 rounded shadow-md mb-4\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        placeholder=\"Task Title\"\r\n        value={taskData.title}\r\n        onChange={handleChange}\r\n        className=\"w-full mb-2 p-2 border rounded\"\r\n      />\r\n      <textarea\r\n        name=\"description\"\r\n        placeholder=\"Task Description\"\r\n        value={taskData.description}\r\n        onChange={handleChange}\r\n        className=\"w-full mb-2 p-2 border rounded\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"startDate\"\r\n        placeholder=\"Start Date (DD/MM/YYYY)\"\r\n        value={taskData.startDate}\r\n        onChange={handleChange}\r\n        className=\"w-full mb-2 p-2 border rounded\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"endDate\"\r\n        placeholder=\"End Date (DD/MM/YYYY)\"\r\n        value={taskData.endDate}\r\n        onChange={handleChange}\r\n        className=\"w-full mb-2 p-2 border rounded\"\r\n      />\r\n      <button type=\"submit\" className=\"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\">\r\n        Add Task\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}