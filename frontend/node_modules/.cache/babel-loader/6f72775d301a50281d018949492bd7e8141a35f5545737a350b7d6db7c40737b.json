{"ast":null,"code":"var _jsxFileName = \"E:\\\\Task_Manager_APP\\\\frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createTask } from '../services/api'; // Import createTask as a named import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskForm({\n  onTaskCreated\n}) {\n  _s();\n  const [taskName, setTaskName] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const newTask = await createTask({\n        name: taskName\n      });\n      onTaskCreated(newTask); // Callback to update the list\n      setTaskName('');\n    } catch (error) {\n      console.error('Error creating task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: taskName,\n      onChange: e => setTaskName(e.target.value),\n      placeholder: \"Enter task name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"+8PLwpsOfuqrybg/Jil3XqizyAQ=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","createTask","jsxDEV","_jsxDEV","TaskForm","onTaskCreated","_s","taskName","setTaskName","handleSubmit","e","preventDefault","newTask","name","error","console","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Task_Manager_APP/frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createTask } from '../services/api'; // Import createTask as a named import\r\n\r\nfunction TaskForm({ onTaskCreated }) {\r\n  const [taskName, setTaskName] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newTask = await createTask({ name: taskName });\r\n      onTaskCreated(newTask); // Callback to update the list\r\n      setTaskName('');\r\n    } catch (error) {\r\n      console.error('Error creating task:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={taskName}\r\n        onChange={(e) => setTaskName(e.target.value)}\r\n        placeholder=\"Enter task name\"\r\n      />\r\n      <button type=\"submit\">Add Task</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TaskForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,QAAQA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMX,UAAU,CAAC;QAAEY,IAAI,EAAEN;MAAS,CAAC,CAAC;MACpDF,aAAa,CAACO,OAAO,CAAC,CAAC,CAAC;MACxBJ,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEX,OAAA;IAAMa,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBAC3Bd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEZ,QAAS;MAChBa,QAAQ,EAAGV,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;MAC7CG,WAAW,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFvB,OAAA;MAAQe,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX;AAACpB,EAAA,CAzBQF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AA2BjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}