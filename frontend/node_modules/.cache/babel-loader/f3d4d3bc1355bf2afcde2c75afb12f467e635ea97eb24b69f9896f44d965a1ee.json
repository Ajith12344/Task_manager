{"ast":null,"code":"// frontend/src/services/api.js\nimport axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:8000/api/'\n});\n\n// Attach the Authorization header to all API requests\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token'); // Get token from localStorage\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`; // Set token in the header\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const fetchTasks = () => API.get('tasks/');\nexport const createTask = newTask => API.post('tasks/', newTask);","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","fetchTasks","get","createTask","newTask","post"],"sources":["E:/Task_Manager_APP/frontend/src/services/api.js"],"sourcesContent":["// frontend/src/services/api.js\r\nimport axios from 'axios';\r\n\r\nconst API = axios.create({\r\n  baseURL: 'http://localhost:8000/api/',\r\n});\r\n\r\n// Attach the Authorization header to all API requests\r\nAPI.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token'); // Get token from localStorage\r\n  if (token) {\r\n    config.headers['Authorization'] = `Bearer ${token}`; // Set token in the header\r\n  }\r\n  return config;\r\n}, (error) => {\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport const fetchTasks = () => API.get('tasks/');\r\nexport const createTask = (newTask) => API.post('tasks/', newTask);\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE,CAAC,CAAC;EACvD;EACA,OAAOD,MAAM;AACf,CAAC,EAAGK,KAAK,IAAK;EACZ,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEF,OAAO,MAAMG,UAAU,GAAGA,CAAA,KAAMd,GAAG,CAACe,GAAG,CAAC,QAAQ,CAAC;AACjD,OAAO,MAAMC,UAAU,GAAIC,OAAO,IAAKjB,GAAG,CAACkB,IAAI,CAAC,QAAQ,EAAED,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}