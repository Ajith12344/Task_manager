{"ast":null,"code":"var _jsxFileName = \"E:\\\\Task_Manager_APP\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const [tasks, setTasks] = useState([]); // Initial state set to an empty array\n  const [loading, setLoading] = useState(true); // To handle loading state\n  const [error, setError] = useState(null); // To handle any errors\n\n  useEffect(() => {\n    // Fetch tasks from the API\n    fetch('http://127.0.0.1:8000/api/tasks/tasks').then(response => response.json()).then(data => {\n      // Check if the data is an array\n      if (Array.isArray(data)) {\n        setTasks(data); // Directly use the array if it's returned\n      } else {\n        console.error('Expected an array, but got:', data);\n        setTasks([]); // Set an empty array if data format is incorrect\n      }\n      setLoading(false); // Set loading to false after data is fetched\n    }).catch(error => {\n      console.error('Error fetching tasks:', error);\n      setError(error.message); // Store error message if the fetch fails\n      setLoading(false); // Set loading to false even if there's an error\n    });\n  }, []); // Empty dependency array to fetch data once on mount\n\n  // If data is still loading\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-gray-600\",\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If there was an error fetching the tasks\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-red-500\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the tasks list\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-500\",\n      children: \"No tasks available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-gray-800\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-2\",\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 text-sm text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: \"Due:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), \" \", task.due_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-sm text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: \"Priority:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `ml-2 px-2 py-1 rounded-full text-xs font-medium ${task.priority === 'high' ? 'bg-red-100 text-red-600' : task.priority === 'medium' ? 'bg-yellow-100 text-yellow-600' : 'bg-green-100 text-green-600'}`,\n            children: task.priority.charAt(0).toUpperCase() + task.priority.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"qwRs5Xd4E7WtXCZK9zh6nomhOw4=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","loading","setLoading","error","setError","fetch","then","response","json","data","Array","isArray","console","catch","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","task","title","description","due_date","priority","charAt","toUpperCase","slice","id","_c","$RefreshReg$"],"sources":["E:/Task_Manager_APP/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction TaskList() {\r\n  const [tasks, setTasks] = useState([]); // Initial state set to an empty array\r\n  const [loading, setLoading] = useState(true); // To handle loading state\r\n  const [error, setError] = useState(null); // To handle any errors\r\n\r\n  useEffect(() => {\r\n    // Fetch tasks from the API\r\n    fetch('http://127.0.0.1:8000/api/tasks/tasks')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Check if the data is an array\r\n        if (Array.isArray(data)) {\r\n          setTasks(data); // Directly use the array if it's returned\r\n        } else {\r\n          console.error('Expected an array, but got:', data);\r\n          setTasks([]); // Set an empty array if data format is incorrect\r\n        }\r\n        setLoading(false); // Set loading to false after data is fetched\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching tasks:', error);\r\n        setError(error.message); // Store error message if the fetch fails\r\n        setLoading(false); // Set loading to false even if there's an error\r\n      });\r\n  }, []); // Empty dependency array to fetch data once on mount\r\n\r\n  // If data is still loading\r\n  if (loading) {\r\n    return <div className=\"text-center text-gray-600\">Loading tasks...</div>;\r\n  }\r\n\r\n  // If there was an error fetching the tasks\r\n  if (error) {\r\n    return <div className=\"text-center text-red-500\">Error: {error}</div>;\r\n  }\r\n\r\n  // Render the tasks list\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      {tasks.length === 0 ? (\r\n        <p className=\"text-center text-gray-500\">No tasks available</p>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {tasks.map((task) => (\r\n            <div key={task.id} className=\"bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300\">\r\n              <h3 className=\"text-xl font-semibold text-gray-800\">{task.title}</h3>\r\n              <p className=\"text-gray-600 mt-2\">{task.description}</p>\r\n              <p className=\"mt-4 text-sm text-gray-500\">\r\n                <span className=\"font-semibold\">Due:</span> {task.due_date}\r\n              </p>\r\n              <p className=\"mt-2 text-sm text-gray-500\">\r\n                <span className=\"font-semibold\">Priority:</span> \r\n                <span\r\n                  className={`ml-2 px-2 py-1 rounded-full text-xs font-medium ${\r\n                    task.priority === 'high' ? 'bg-red-100 text-red-600' : task.priority === 'medium' ? 'bg-yellow-100 text-yellow-600' : 'bg-green-100 text-green-600'\r\n                  }`}\r\n                >\r\n                  {task.priority.charAt(0).toUpperCase() + task.priority.slice(1)}\r\n                </span>\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}