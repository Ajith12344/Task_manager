{"ast":null,"code":"const API_URL = \"http://127.0.0.1:8000/tasks/\";\nexport async function fetchTasks() {\n  try {\n    const response = await fetch(API_URL);\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching tasks:\", error);\n  }\n}\nexport async function createTask(taskData) {\n  try {\n    const response = await fetch(API_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(taskData)\n    });\n    if (!response.ok) {\n      throw new Error(\"Error creating task\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error creating task:\", error);\n  }\n}\nexport async function markTaskCompleted(taskId) {\n  try {\n    const response = await fetch(`${API_URL}${taskId}/mark_completed/`, {\n      method: \"POST\"\n    });\n    if (!response.ok) {\n      throw new Error(\"Error marking task as completed\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error marking task as completed:\", error);\n  }\n}","map":{"version":3,"names":["API_URL","fetchTasks","response","fetch","ok","Error","json","error","console","createTask","taskData","method","headers","body","JSON","stringify","markTaskCompleted","taskId"],"sources":["E:/Task_Manager_APP/frontend/src/services/api.js"],"sourcesContent":["const API_URL = \"http://127.0.0.1:8000/tasks/\";\r\n\r\nexport async function fetchTasks() {\r\n  try {\r\n    const response = await fetch(API_URL);\r\n    if (!response.ok) {\r\n      throw new Error(\"Network response was not ok\");\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching tasks:\", error);\r\n  }\r\n}\r\n\r\nexport async function createTask(taskData) {\r\n  try {\r\n    const response = await fetch(API_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(taskData),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(\"Error creating task\");\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error creating task:\", error);\r\n  }\r\n}\r\n\r\nexport async function markTaskCompleted(taskId) {\r\n  try {\r\n    const response = await fetch(`${API_URL}${taskId}/mark_completed/`, {\r\n      method: \"POST\",\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(\"Error marking task as completed\");\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error marking task as completed:\", error);\r\n  }\r\n}\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,8BAA8B;AAE9C,OAAO,eAAeC,UAAUA,CAAA,EAAG;EACjC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC;IACrC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EAC/C;AACF;AAEA,OAAO,eAAeE,UAAUA,CAACC,QAAQ,EAAE;EACzC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,EAAE;MACpCW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ;IAC/B,CAAC,CAAC;IACF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IACxC;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC9C;AACF;AAEA,OAAO,eAAeS,iBAAiBA,CAACC,MAAM,EAAE;EAC9C,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,GAAGiB,MAAM,kBAAkB,EAAE;MAClEN,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;IACpD;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;EAC1D;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}