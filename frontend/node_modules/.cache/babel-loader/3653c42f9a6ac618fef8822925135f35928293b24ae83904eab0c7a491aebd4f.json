{"ast":null,"code":"const BASE_URL = 'http://127.0.0.1:8000/api/tasks';\nexport const getTasks = async (filters = {}) => {\n  const url = new URL(BASE_URL + '/');\n  Object.keys(filters).forEach(key => url.searchParams.append(key, filters[key]));\n  const response = await fetch(url);\n  return await response.json();\n};\nexport const createTask = async taskData => {\n  const response = await fetch(`${BASE_URL}/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(taskData)\n  });\n  return await response.json();\n};\nexport const markTaskCompleted = async taskId => {\n  // Using PATCH to mark the task as completed\n  const response = await fetch(`${BASE_URL}/${taskId}/`, {\n    method: 'PATCH' // Changed to PATCH for updating a resource partially\n  });\n  return await response.json();\n};\nexport const getCompletedTasks = async () => {\n  const response = await fetch(`${BASE_URL}/completed/`);\n  return await response.json();\n};\nexport const updateTask = async (taskId, taskData) => {\n  // Using PUT for updating the entire task\n  const response = await fetch(`${BASE_URL}/${taskId}/`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(taskData)\n  });\n  return await response.json();\n};\nexport const deleteTask = async taskId => {\n  const response = await fetch(`${BASE_URL}/${taskId}/`, {\n    method: 'DELETE'\n  });\n  return response.ok;\n};","map":{"version":3,"names":["BASE_URL","getTasks","filters","url","URL","Object","keys","forEach","key","searchParams","append","response","fetch","json","createTask","taskData","method","headers","body","JSON","stringify","markTaskCompleted","taskId","getCompletedTasks","updateTask","deleteTask","ok"],"sources":["E:/Task_Manager_APP/frontend/src/services/api.js"],"sourcesContent":["const BASE_URL = 'http://127.0.0.1:8000/api/tasks';\r\n\r\nexport const getTasks = async (filters = {}) => {\r\n  const url = new URL(BASE_URL + '/');\r\n  Object.keys(filters).forEach(key => url.searchParams.append(key, filters[key]));\r\n  const response = await fetch(url);\r\n  return await response.json();\r\n};\r\n\r\nexport const createTask = async (taskData) => {\r\n  const response = await fetch(`${BASE_URL}/`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(taskData)\r\n  });\r\n  return await response.json();\r\n};\r\n\r\nexport const markTaskCompleted = async (taskId) => {\r\n  // Using PATCH to mark the task as completed\r\n  const response = await fetch(`${BASE_URL}/${taskId}/`, {\r\n    method: 'PATCH', // Changed to PATCH for updating a resource partially\r\n  });\r\n  return await response.json();\r\n};\r\n\r\nexport const getCompletedTasks = async () => {\r\n  const response = await fetch(`${BASE_URL}/completed/`);\r\n  return await response.json();\r\n};\r\n\r\nexport const updateTask = async (taskId, taskData) => {\r\n  // Using PUT for updating the entire task\r\n  const response = await fetch(`${BASE_URL}/${taskId}/`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(taskData)\r\n  });\r\n  return await response.json();\r\n};\r\n\r\nexport const deleteTask = async (taskId) => {\r\n  const response = await fetch(`${BASE_URL}/${taskId}/`, {\r\n    method: 'DELETE'\r\n  });\r\n  return response.ok;\r\n};\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,iCAAiC;AAElD,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC9C,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACJ,QAAQ,GAAG,GAAG,CAAC;EACnCK,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC,CAACK,OAAO,CAACC,GAAG,IAAIL,GAAG,CAACM,YAAY,CAACC,MAAM,CAACF,GAAG,EAAEN,OAAO,CAACM,GAAG,CAAC,CAAC,CAAC;EAC/E,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAG,CAAC;EACjC,OAAO,MAAMQ,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGZ,QAAQ,GAAG,EAAE;IAC3CgB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ;EAC/B,CAAC,CAAC;EACF,OAAO,MAAMJ,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMQ,iBAAiB,GAAG,MAAOC,MAAM,IAAK;EACjD;EACA,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGZ,QAAQ,IAAIsB,MAAM,GAAG,EAAE;IACrDN,MAAM,EAAE,OAAO,CAAE;EACnB,CAAC,CAAC;EACF,OAAO,MAAML,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGZ,QAAQ,aAAa,CAAC;EACtD,OAAO,MAAMW,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMW,UAAU,GAAG,MAAAA,CAAOF,MAAM,EAAEP,QAAQ,KAAK;EACpD;EACA,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGZ,QAAQ,IAAIsB,MAAM,GAAG,EAAE;IACrDN,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ;EAC/B,CAAC,CAAC;EACF,OAAO,MAAMJ,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMY,UAAU,GAAG,MAAOH,MAAM,IAAK;EAC1C,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGZ,QAAQ,IAAIsB,MAAM,GAAG,EAAE;IACrDN,MAAM,EAAE;EACV,CAAC,CAAC;EACF,OAAOL,QAAQ,CAACe,EAAE;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}