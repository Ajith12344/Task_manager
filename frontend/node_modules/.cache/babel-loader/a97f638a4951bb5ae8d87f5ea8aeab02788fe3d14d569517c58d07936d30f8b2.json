{"ast":null,"code":"const API_URL = 'http://127.0.0.1:8000/tasks/'; // This should match your backend URL\n\n// Function to fetch tasks, optionally with filters\nexport const fetchTasks = async (priority = '', completed = '', dueDate = '') => {\n  try {\n    const url = new URL(API_URL);\n\n    // Append query parameters if they exist\n    if (priority) url.searchParams.append('priority', priority);\n    if (completed) url.searchParams.append('completed', completed);\n    if (dueDate) url.searchParams.append('dueDate', dueDate);\n    const response = await fetch(url);\n\n    // Check for successful response before parsing JSON\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    // Parse the JSON response\n    const data = await response.json();\n    return data; // Return the tasks data\n  } catch (error) {\n    console.error(\"Error fetching tasks:\", error);\n    throw error; // Rethrow the error so that it can be handled in the calling function\n  }\n};","map":{"version":3,"names":["API_URL","fetchTasks","priority","completed","dueDate","url","URL","searchParams","append","response","fetch","ok","Error","status","data","json","error","console"],"sources":["E:/Task_Manager_APP/frontend/src/services/api.js"],"sourcesContent":["const API_URL = 'http://127.0.0.1:8000/tasks/';  // This should match your backend URL\r\n\r\n// Function to fetch tasks, optionally with filters\r\nexport const fetchTasks = async (priority = '', completed = '', dueDate = '') => {\r\n    try {\r\n        const url = new URL(API_URL);\r\n\r\n        // Append query parameters if they exist\r\n        if (priority) url.searchParams.append('priority', priority);\r\n        if (completed) url.searchParams.append('completed', completed);\r\n        if (dueDate) url.searchParams.append('dueDate', dueDate);\r\n\r\n        const response = await fetch(url);\r\n        \r\n        // Check for successful response before parsing JSON\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        \r\n        // Parse the JSON response\r\n        const data = await response.json();\r\n        return data;  // Return the tasks data\r\n\r\n    } catch (error) {\r\n        console.error(\"Error fetching tasks:\", error);\r\n        throw error;  // Rethrow the error so that it can be handled in the calling function\r\n    }\r\n};\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,8BAA8B,CAAC,CAAE;;AAEjD;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,QAAQ,GAAG,EAAE,EAAEC,SAAS,GAAG,EAAE,EAAEC,OAAO,GAAG,EAAE,KAAK;EAC7E,IAAI;IACA,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACN,OAAO,CAAC;;IAE5B;IACA,IAAIE,QAAQ,EAAEG,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,UAAU,EAAEN,QAAQ,CAAC;IAC3D,IAAIC,SAAS,EAAEE,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,WAAW,EAAEL,SAAS,CAAC;IAC9D,IAAIC,OAAO,EAAEC,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,SAAS,EAAEJ,OAAO,CAAC;IAExD,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,CAAC;;IAEjC;IACA,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;IAC7D;;IAEA;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAAC,CAAE;EAElB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK,CAAC,CAAE;EAClB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}