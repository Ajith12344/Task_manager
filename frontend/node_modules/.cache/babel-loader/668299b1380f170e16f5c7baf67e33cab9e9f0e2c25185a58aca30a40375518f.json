{"ast":null,"code":"const BASE_URL = 'http://127.0.0.1:8000/api/tasks/';\nexport const getTasks = async (filter = {}) => {\n  const queryParams = new URLSearchParams(filter).toString();\n  const response = await fetch(`${BASE_URL}?${queryParams}`);\n  if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n  return response.json();\n};\nexport const createTask = async taskData => {\n  const response = await fetch(BASE_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(taskData)\n  });\n  if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n  return response.json();\n};\nexport const deleteTask = async taskId => {\n  const response = await fetch(`${BASE_URL}${taskId}/`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n};\nexport const markTaskCompleted = async taskId => {\n  const response = await fetch(`${BASE_URL}${taskId}/complete/`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n  return response.json();\n};","map":{"version":3,"names":["BASE_URL","getTasks","filter","queryParams","URLSearchParams","toString","response","fetch","ok","Error","status","json","createTask","taskData","method","headers","body","JSON","stringify","deleteTask","taskId","markTaskCompleted"],"sources":["E:/Task_Manager_APP/frontend/src/services/api.js"],"sourcesContent":["const BASE_URL = 'http://127.0.0.1:8000/api/tasks/';\r\n\r\nexport const getTasks = async (filter = {}) => {\r\n  const queryParams = new URLSearchParams(filter).toString();\r\n  const response = await fetch(`${BASE_URL}?${queryParams}`);\r\n  if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\r\n  return response.json();\r\n};\r\n\r\nexport const createTask = async (taskData) => {\r\n  const response = await fetch(BASE_URL, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(taskData),\r\n  });\r\n  if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\r\n  return response.json();\r\n};\r\n\r\nexport const deleteTask = async (taskId) => {\r\n  const response = await fetch(`${BASE_URL}${taskId}/`, {\r\n    method: 'DELETE',\r\n  });\r\n  if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\r\n};\r\n\r\nexport const markTaskCompleted = async (taskId) => {\r\n  const response = await fetch(`${BASE_URL}${taskId}/complete/`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\r\n  return response.json();\r\n};\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,kCAAkC;AAEnD,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,MAAM,GAAG,CAAC,CAAC,KAAK;EAC7C,MAAMC,WAAW,GAAG,IAAIC,eAAe,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,CAAC;EAC1D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,QAAQ,IAAIG,WAAW,EAAE,CAAC;EAC1D,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;EAC3E,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAACP,QAAQ,EAAE;IACrCc,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ;EAC/B,CAAC,CAAC;EACF,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;EAC3E,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAG,MAAOC,MAAM,IAAK;EAC1C,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,QAAQ,GAAGoB,MAAM,GAAG,EAAE;IACpDN,MAAM,EAAE;EACV,CAAC,CAAC;EACF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;AAC7E,CAAC;AAED,OAAO,MAAMW,iBAAiB,GAAG,MAAOD,MAAM,IAAK;EACjD,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,QAAQ,GAAGoB,MAAM,YAAY,EAAE;IAC7DN,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;EAC3E,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}