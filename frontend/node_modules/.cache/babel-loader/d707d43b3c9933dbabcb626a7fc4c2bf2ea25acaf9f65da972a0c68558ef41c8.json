{"ast":null,"code":"// Example: Fetching all tasks\nasync function fetchTasks() {\n  try {\n    const response = await fetch('http://127.0.0.1:8000/tasks/');\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching tasks:', error);\n  }\n}\n\n// Example: Mark a task as completed\nasync function markTaskCompleted(taskId) {\n  try {\n    const response = await fetch(`http://127.0.0.1:8000/tasks/${taskId}/mark_completed/`, {\n      method: 'POST'\n    });\n    if (response.ok) {\n      console.log('Task marked as completed');\n    } else {\n      console.error('Failed to mark task as completed');\n    }\n  } catch (error) {\n    console.error('Error marking task as completed:', error);\n  }\n}","map":{"version":3,"names":["fetchTasks","response","fetch","ok","Error","data","json","error","console","markTaskCompleted","taskId","method","log"],"sources":["E:/Task_Manager_APP/frontend/src/services/api.js"],"sourcesContent":["// Example: Fetching all tasks\r\nasync function fetchTasks() {\r\n    try {\r\n        const response = await fetch('http://127.0.0.1:8000/tasks/');\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n    }\r\n}\r\n\r\n// Example: Mark a task as completed\r\nasync function markTaskCompleted(taskId) {\r\n    try {\r\n        const response = await fetch(`http://127.0.0.1:8000/tasks/${taskId}/mark_completed/`, {\r\n            method: 'POST',\r\n        });\r\n        if (response.ok) {\r\n            console.log('Task marked as completed');\r\n        } else {\r\n            console.error('Failed to mark task as completed');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error marking task as completed:', error);\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA,eAAeA,UAAUA,CAAA,EAAG;EACxB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EACjD;AACJ;;AAEA;AACA,eAAeE,iBAAiBA,CAACC,MAAM,EAAE;EACrC,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+BQ,MAAM,kBAAkB,EAAE;MAClFC,MAAM,EAAE;IACZ,CAAC,CAAC;IACF,IAAIV,QAAQ,CAACE,EAAE,EAAE;MACbK,OAAO,CAACI,GAAG,CAAC,0BAA0B,CAAC;IAC3C,CAAC,MAAM;MACHJ,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAC;IACrD;EACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;EAC5D;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}